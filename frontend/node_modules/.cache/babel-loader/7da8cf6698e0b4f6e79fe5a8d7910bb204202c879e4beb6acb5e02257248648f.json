{"ast":null,"code":"var _jsxFileName = \"/home/jeff/Development/code/se-prep/Phase-4-project-management-system/frontend/src/component/TaskList.jsx\",\n  _s = $RefreshSig$();\n/*\nimport React, { useState, useEffect } from 'react';\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\nimport * as Yup from 'yup';\n\nfunction TaskList() {\n  const [tasks, setTasks] = useState([]);\n  const [editingTask, setEditingTask] = useState(null);\n\n  useEffect(() => {\n    fetchTasks();\n  }, []);\n\n  const fetchTasks = () => {\n    fetch('http://localhost:5555/tasks')\n      .then(response => response.json())\n      .then(data => setTasks(data))\n      .catch(error => console.error('Error fetching tasks:', error));\n  };\n\n  const addTask = (task) => {\n    fetch('http://localhost:5555/tasks', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(task)\n    })\n      .then(response => response.json())\n      .then(() => fetchTasks())\n      .catch(error => console.error('Error adding task:', error));\n  };\n\n  const updateTask = (task) => {\n    fetch(`http://localhost:5555/tasks/${task.id}`, {\n      method: 'PUT',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(task)\n    })\n      .then(response => response.json())\n      .then(() => {\n        fetchTasks();\n        setEditingTask(null);\n      })\n      .catch(error => console.error('Error updating task:', error));\n  };\n\n  const deleteTask = (taskId) => {\n    fetch(`http://localhost:5555/tasks/${taskId}`, {\n      method: 'DELETE',\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    })\n      .then(() => fetchTasks())\n      .catch(error => console.error('Error deleting task:', error));\n  };\n\n  const handleEditClick = (task) => {\n    setEditingTask(task);\n  };\n\n  return (\n    <div>\n      <h2 className=\"text-2xl font-bold text-gray-800 mb-4\">Tasks</h2>\n      <ul className=\"list-group mb-4\">\n        {tasks.map(task => (\n          <li key={task.id} className=\"list-group-item border-gray-200\">\n            <div className=\"px-4 py-4\">\n              <div className=\"d-flex justify-content-between\">\n                <h3 className=\"text-lg font-weight-bold text-gray-900\">{task.name}</h3>\n                <p className=\"mt-1 text-sm text-muted\">Description: {task.description}</p>\n              </div>\n              <p className=\"mt-1 text-sm text-gray-600\">Due Date: {task.due_date}</p>\n              <button className=\"btn btn-secondary btn-sm mr-2\" onClick={() => handleEditClick(task)}>Edit</button>\n              <button className=\"btn btn-danger btn-sm\" onClick={() => deleteTask(task.id)}>Delete</button>\n            </div>\n          </li>\n        ))}\n      </ul>\n      <TaskForm onTaskAdded={addTask} onTaskUpdated={updateTask} editingTask={editingTask} />\n    </div>\n  );\n}\n\nfunction TaskForm({ onTaskAdded, onTaskUpdated, editingTask }) {\n  const initialValues = { name: '', description: '', due_date: '', project_id: '' };\n\n  const validationSchema = Yup.object({\n    name: Yup.string().required('Required'),\n    description: Yup.string().required('Required'),\n    due_date: Yup.string().required('Required'),\n    project_id: Yup.number().required('Required')\n  });\n\n  useEffect(() => {\n    if (editingTask) {\n      Formik.setValues(editingTask);\n    }\n  }, [editingTask]);\n\n  const handleSubmit = (values, { setSubmitting, resetForm }) => {\n    if (editingTask) {\n      onTaskUpdated({ ...values, id: editingTask.id });\n    } else {\n      onTaskAdded(values);\n    }\n    resetForm();\n    setSubmitting(false);\n  };\n\n  return (\n    <Formik\n      initialValues={initialValues}\n      validationSchema={validationSchema}\n      onSubmit={handleSubmit}\n      enableReinitialize\n    >\n      {({ isSubmitting, setValues }) => (\n        <Form className=\"bg-white shadow-sm rounded px-4 pt-4 pb-4 mb-4\">\n          <div className=\"mb-3\">\n            <label htmlFor=\"name\" className=\"form-label text-gray-700\">\n              Name\n            </label>\n            <Field\n              type=\"text\"\n              name=\"name\"\n              className=\"form-control\"\n            />\n            <ErrorMessage name=\"name\" component=\"div\" className=\"text-danger small\" />\n          </div>\n          <div className=\"mb-3\">\n            <label htmlFor=\"description\" className=\"form-label text-gray-700\">\n              Description\n            </label>\n            <Field\n              as=\"textarea\"\n              name=\"description\"\n              className=\"form-control\"\n              rows=\"3\"\n            />\n            <ErrorMessage name=\"description\" component=\"div\" className=\"text-danger small\" />\n          </div>\n          <div className=\"mb-3\">\n            <label htmlFor=\"due_date\" className=\"form-label text-gray-700\">\n              Due Date\n            </label>\n            <Field\n              type=\"date\"\n              name=\"due_date\"\n              className=\"form-control\"\n            />\n            <ErrorMessage name=\"due_date\" component=\"div\" className=\"text-danger small\" />\n          </div>\n          <div className=\"mb-3\">\n            <label htmlFor=\"id\" className=\"form-label text-gray-700\">\n              Project_id\n            </label>\n            <Field\n              type=\"text\"\n              name=\"id\"\n              className=\"form-control\"\n            />\n            <ErrorMessage name=\"project_id\" component=\"div\" className=\"text-danger small\" />\n          </div>\n\n          <div className=\"d-flex justify-content-end\">\n            <button\n              type=\"submit\"\n              disabled={isSubmitting}\n              className=\"btn btn-primary\"\n            >\n              {isSubmitting ? 'Submitting...' : editingTask ? 'Update Task' : 'Add Task'}\n            </button>\n          </div>\n        </Form>\n      )}\n    </Formik>\n  );\n}\n\nexport default TaskList;\n*/\nimport React, { useState, useEffect } from 'react';\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\nimport * as Yup from 'yup';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction TaskList() {\n  _s();\n  const [tasks, setTasks] = useState([]);\n  const [editingTask, setEditingTask] = useState(null);\n  useEffect(() => {\n    fetchTasks();\n  }, []);\n  const fetchTasks = () => {\n    fetch('http://localhost:5555/tasks').then(response => response.json()).then(data => setTasks(data)).catch(error => console.error('Error fetching tasks:', error));\n  };\n  const addTask = task => {\n    fetch('http://localhost:5555/tasks', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(task)\n    }).then(response => response.json()).then(() => fetchTasks()).catch(error => console.error('Error adding task:', error));\n  };\n  const updateTask = task => {\n    fetch(`http://localhost:5555/tasks/${task.id}`, {\n      method: 'PUT',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(task)\n    }).then(response => response.json()).then(() => {\n      fetchTasks();\n      setEditingTask(null);\n    }).catch(error => console.error('Error updating task:', error));\n  };\n  const deleteTask = taskId => {\n    fetch(`http://localhost:5555/tasks/${taskId}`, {\n      method: 'DELETE',\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    }).then(() => fetchTasks()).catch(error => console.error('Error deleting task:', error));\n  };\n  const handleEditClick = task => {\n    setEditingTask(task);\n  };\n  const initialValues = {\n    name: '',\n    description: '',\n    due_date: '',\n    project_id: ''\n  };\n  const validationSchema = Yup.object({\n    name: Yup.string().required('Required'),\n    description: Yup.string().required('Required'),\n    due_date: Yup.string().required('Required'),\n    project_id: Yup.number().required('Required').integer('Must be an integer')\n  });\n  useEffect(() => {\n    if (editingTask) {\n      setValues(editingTask);\n    }\n  }, [editingTask]);\n  const handleSubmit = (values, {\n    setSubmitting,\n    resetForm\n  }) => {\n    if (editingTask) {\n      updateTask({\n        ...values,\n        id: editingTask.id\n      });\n    } else {\n      addTask(values);\n    }\n    resetForm();\n    setSubmitting(false);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"text-2xl font-bold text-gray-800 mb-4\",\n      children: \"Tasks\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 276,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"list-group mb-4\",\n      children: tasks.map(task => /*#__PURE__*/_jsxDEV(\"li\", {\n        className: \"list-group-item border-gray-200\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"px-4 py-4\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"d-flex justify-content-between\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              className: \"text-lg font-weight-bold text-gray-900\",\n              children: task.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 282,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"mt-1 text-sm text-muted\",\n              children: [\"Description: \", task.description]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 283,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 281,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"mt-1 text-sm text-gray-600\",\n            children: [\"Due Date: \", task.due_date]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 285,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn btn-secondary btn-sm mr-2\",\n            onClick: () => handleEditClick(task),\n            children: \"Edit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 286,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn btn-danger btn-sm\",\n            onClick: () => deleteTask(task.id),\n            children: \"Delete\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 287,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 280,\n          columnNumber: 13\n        }, this)\n      }, task.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 279,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 277,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Formik, {\n      initialValues: initialValues,\n      validationSchema: validationSchema,\n      onSubmit: handleSubmit,\n      enableReinitialize: true,\n      children: ({\n        isSubmitting,\n        setValues\n      }) => /*#__PURE__*/_jsxDEV(Form, {\n        className: \"bg-white shadow-sm rounded px-4 pt-4 pb-4 mb-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mb-3\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"name\",\n            className: \"form-label text-gray-700\",\n            children: \"Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 302,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Field, {\n            type: \"text\",\n            name: \"name\",\n            className: \"form-control\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 305,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n            name: \"name\",\n            component: \"div\",\n            className: \"text-danger small\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 310,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 301,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mb-3\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"description\",\n            className: \"form-label text-gray-700\",\n            children: \"Description\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 313,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Field, {\n            as: \"textarea\",\n            name: \"description\",\n            className: \"form-control\",\n            rows: \"3\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 316,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n            name: \"description\",\n            component: \"div\",\n            className: \"text-danger small\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 322,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 312,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mb-3\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"due_date\",\n            className: \"form-label text-gray-700\",\n            children: \"Due Date\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 325,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Field, {\n            type: \"date\",\n            name: \"due_date\",\n            className: \"form-control\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 328,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n            name: \"due_date\",\n            component: \"div\",\n            className: \"text-danger small\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 333,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 324,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mb-3\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"project_id\",\n            className: \"form-label text-gray-700\",\n            children: \"Project ID\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 336,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Field, {\n            type: \"number\",\n            name: \"project_id\",\n            className: \"form-control\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 339,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n            name: \"project_id\",\n            component: \"div\",\n            className: \"text-danger small\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 344,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 335,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"d-flex justify-content-end\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            disabled: isSubmitting,\n            className: \"btn btn-primary\",\n            children: isSubmitting ? 'Submitting...' : editingTask ? 'Update Task' : 'Add Task'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 347,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 346,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 300,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 293,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 275,\n    columnNumber: 5\n  }, this);\n}\n_s(TaskList, \"sc++KOrazxGLQ/U1O6Nnw9PIrL8=\");\n_c = TaskList;\nexport default TaskList;\nvar _c;\n$RefreshReg$(_c, \"TaskList\");","map":{"version":3,"names":["React","useState","useEffect","Formik","Form","Field","ErrorMessage","Yup","jsxDEV","_jsxDEV","TaskList","_s","tasks","setTasks","editingTask","setEditingTask","fetchTasks","fetch","then","response","json","data","catch","error","console","addTask","task","method","headers","body","JSON","stringify","updateTask","id","deleteTask","taskId","handleEditClick","initialValues","name","description","due_date","project_id","validationSchema","object","string","required","number","integer","setValues","handleSubmit","values","setSubmitting","resetForm","children","className","fileName","_jsxFileName","lineNumber","columnNumber","map","onClick","onSubmit","enableReinitialize","isSubmitting","htmlFor","type","component","as","rows","disabled","_c","$RefreshReg$"],"sources":["/home/jeff/Development/code/se-prep/Phase-4-project-management-system/frontend/src/component/TaskList.jsx"],"sourcesContent":["/*\nimport React, { useState, useEffect } from 'react';\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\nimport * as Yup from 'yup';\n\nfunction TaskList() {\n  const [tasks, setTasks] = useState([]);\n  const [editingTask, setEditingTask] = useState(null);\n\n  useEffect(() => {\n    fetchTasks();\n  }, []);\n\n  const fetchTasks = () => {\n    fetch('http://localhost:5555/tasks')\n      .then(response => response.json())\n      .then(data => setTasks(data))\n      .catch(error => console.error('Error fetching tasks:', error));\n  };\n\n  const addTask = (task) => {\n    fetch('http://localhost:5555/tasks', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(task)\n    })\n      .then(response => response.json())\n      .then(() => fetchTasks())\n      .catch(error => console.error('Error adding task:', error));\n  };\n\n  const updateTask = (task) => {\n    fetch(`http://localhost:5555/tasks/${task.id}`, {\n      method: 'PUT',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(task)\n    })\n      .then(response => response.json())\n      .then(() => {\n        fetchTasks();\n        setEditingTask(null);\n      })\n      .catch(error => console.error('Error updating task:', error));\n  };\n\n  const deleteTask = (taskId) => {\n    fetch(`http://localhost:5555/tasks/${taskId}`, {\n      method: 'DELETE',\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    })\n      .then(() => fetchTasks())\n      .catch(error => console.error('Error deleting task:', error));\n  };\n\n  const handleEditClick = (task) => {\n    setEditingTask(task);\n  };\n\n  return (\n    <div>\n      <h2 className=\"text-2xl font-bold text-gray-800 mb-4\">Tasks</h2>\n      <ul className=\"list-group mb-4\">\n        {tasks.map(task => (\n          <li key={task.id} className=\"list-group-item border-gray-200\">\n            <div className=\"px-4 py-4\">\n              <div className=\"d-flex justify-content-between\">\n                <h3 className=\"text-lg font-weight-bold text-gray-900\">{task.name}</h3>\n                <p className=\"mt-1 text-sm text-muted\">Description: {task.description}</p>\n              </div>\n              <p className=\"mt-1 text-sm text-gray-600\">Due Date: {task.due_date}</p>\n              <button className=\"btn btn-secondary btn-sm mr-2\" onClick={() => handleEditClick(task)}>Edit</button>\n              <button className=\"btn btn-danger btn-sm\" onClick={() => deleteTask(task.id)}>Delete</button>\n            </div>\n          </li>\n        ))}\n      </ul>\n      <TaskForm onTaskAdded={addTask} onTaskUpdated={updateTask} editingTask={editingTask} />\n    </div>\n  );\n}\n\nfunction TaskForm({ onTaskAdded, onTaskUpdated, editingTask }) {\n  const initialValues = { name: '', description: '', due_date: '', project_id: '' };\n\n  const validationSchema = Yup.object({\n    name: Yup.string().required('Required'),\n    description: Yup.string().required('Required'),\n    due_date: Yup.string().required('Required'),\n    project_id: Yup.number().required('Required')\n  });\n\n  useEffect(() => {\n    if (editingTask) {\n      Formik.setValues(editingTask);\n    }\n  }, [editingTask]);\n\n  const handleSubmit = (values, { setSubmitting, resetForm }) => {\n    if (editingTask) {\n      onTaskUpdated({ ...values, id: editingTask.id });\n    } else {\n      onTaskAdded(values);\n    }\n    resetForm();\n    setSubmitting(false);\n  };\n\n  return (\n    <Formik\n      initialValues={initialValues}\n      validationSchema={validationSchema}\n      onSubmit={handleSubmit}\n      enableReinitialize\n    >\n      {({ isSubmitting, setValues }) => (\n        <Form className=\"bg-white shadow-sm rounded px-4 pt-4 pb-4 mb-4\">\n          <div className=\"mb-3\">\n            <label htmlFor=\"name\" className=\"form-label text-gray-700\">\n              Name\n            </label>\n            <Field\n              type=\"text\"\n              name=\"name\"\n              className=\"form-control\"\n            />\n            <ErrorMessage name=\"name\" component=\"div\" className=\"text-danger small\" />\n          </div>\n          <div className=\"mb-3\">\n            <label htmlFor=\"description\" className=\"form-label text-gray-700\">\n              Description\n            </label>\n            <Field\n              as=\"textarea\"\n              name=\"description\"\n              className=\"form-control\"\n              rows=\"3\"\n            />\n            <ErrorMessage name=\"description\" component=\"div\" className=\"text-danger small\" />\n          </div>\n          <div className=\"mb-3\">\n            <label htmlFor=\"due_date\" className=\"form-label text-gray-700\">\n              Due Date\n            </label>\n            <Field\n              type=\"date\"\n              name=\"due_date\"\n              className=\"form-control\"\n            />\n            <ErrorMessage name=\"due_date\" component=\"div\" className=\"text-danger small\" />\n          </div>\n          <div className=\"mb-3\">\n            <label htmlFor=\"id\" className=\"form-label text-gray-700\">\n              Project_id\n            </label>\n            <Field\n              type=\"text\"\n              name=\"id\"\n              className=\"form-control\"\n            />\n            <ErrorMessage name=\"project_id\" component=\"div\" className=\"text-danger small\" />\n          </div>\n\n          <div className=\"d-flex justify-content-end\">\n            <button\n              type=\"submit\"\n              disabled={isSubmitting}\n              className=\"btn btn-primary\"\n            >\n              {isSubmitting ? 'Submitting...' : editingTask ? 'Update Task' : 'Add Task'}\n            </button>\n          </div>\n        </Form>\n      )}\n    </Formik>\n  );\n}\n\nexport default TaskList;\n*/\nimport React, { useState, useEffect } from 'react';\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\nimport * as Yup from 'yup';\n\nfunction TaskList() {\n  const [tasks, setTasks] = useState([]);\n  const [editingTask, setEditingTask] = useState(null);\n\n  useEffect(() => {\n    fetchTasks();\n  }, []);\n\n  const fetchTasks = () => {\n    fetch('http://localhost:5555/tasks')\n      .then(response => response.json())\n      .then(data => setTasks(data))\n      .catch(error => console.error('Error fetching tasks:', error));\n  };\n\n  const addTask = (task) => {\n    fetch('http://localhost:5555/tasks', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(task)\n    })\n      .then(response => response.json())\n      .then(() => fetchTasks())\n      .catch(error => console.error('Error adding task:', error));\n  };\n\n  const updateTask = (task) => {\n    fetch(`http://localhost:5555/tasks/${task.id}`, {\n      method: 'PUT',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(task)\n    })\n      .then(response => response.json())\n      .then(() => {\n        fetchTasks();\n        setEditingTask(null);\n      })\n      .catch(error => console.error('Error updating task:', error));\n  };\n\n  const deleteTask = (taskId) => {\n    fetch(`http://localhost:5555/tasks/${taskId}`, {\n      method: 'DELETE',\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    })\n      .then(() => fetchTasks())\n      .catch(error => console.error('Error deleting task:', error));\n  };\n\n  const handleEditClick = (task) => {\n    setEditingTask(task);\n  };\n\n  const initialValues = { name: '', description: '', due_date: '', project_id: '' };\n\n  const validationSchema = Yup.object({\n    name: Yup.string().required('Required'),\n    description: Yup.string().required('Required'),\n    due_date: Yup.string().required('Required'),\n    project_id: Yup.number().required('Required').integer('Must be an integer')\n  });\n\n  useEffect(() => {\n    if (editingTask) {\n      setValues(editingTask);\n    }\n  }, [editingTask]);\n\n  const handleSubmit = (values, { setSubmitting, resetForm }) => {\n    if (editingTask) {\n      updateTask({ ...values, id: editingTask.id });\n    } else {\n      addTask(values);\n    }\n    resetForm();\n    setSubmitting(false);\n  };\n\n  return (\n    <div>\n      <h2 className=\"text-2xl font-bold text-gray-800 mb-4\">Tasks</h2>\n      <ul className=\"list-group mb-4\">\n        {tasks.map(task => (\n          <li key={task.id} className=\"list-group-item border-gray-200\">\n            <div className=\"px-4 py-4\">\n              <div className=\"d-flex justify-content-between\">\n                <h3 className=\"text-lg font-weight-bold text-gray-900\">{task.name}</h3>\n                <p className=\"mt-1 text-sm text-muted\">Description: {task.description}</p>\n              </div>\n              <p className=\"mt-1 text-sm text-gray-600\">Due Date: {task.due_date}</p>\n              <button className=\"btn btn-secondary btn-sm mr-2\" onClick={() => handleEditClick(task)}>Edit</button>\n              <button className=\"btn btn-danger btn-sm\" onClick={() => deleteTask(task.id)}>Delete</button>\n            </div>\n          </li>\n        ))}\n      </ul>\n\n      <Formik\n        initialValues={initialValues}\n        validationSchema={validationSchema}\n        onSubmit={handleSubmit}\n        enableReinitialize\n      >\n        {({ isSubmitting, setValues }) => (\n          <Form className=\"bg-white shadow-sm rounded px-4 pt-4 pb-4 mb-4\">\n            <div className=\"mb-3\">\n              <label htmlFor=\"name\" className=\"form-label text-gray-700\">\n                Name\n              </label>\n              <Field\n                type=\"text\"\n                name=\"name\"\n                className=\"form-control\"\n              />\n              <ErrorMessage name=\"name\" component=\"div\" className=\"text-danger small\" />\n            </div>\n            <div className=\"mb-3\">\n              <label htmlFor=\"description\" className=\"form-label text-gray-700\">\n                Description\n              </label>\n              <Field\n                as=\"textarea\"\n                name=\"description\"\n                className=\"form-control\"\n                rows=\"3\"\n              />\n              <ErrorMessage name=\"description\" component=\"div\" className=\"text-danger small\" />\n            </div>\n            <div className=\"mb-3\">\n              <label htmlFor=\"due_date\" className=\"form-label text-gray-700\">\n                Due Date\n              </label>\n              <Field\n                type=\"date\"\n                name=\"due_date\"\n                className=\"form-control\"\n              />\n              <ErrorMessage name=\"due_date\" component=\"div\" className=\"text-danger small\" />\n            </div>\n            <div className=\"mb-3\">\n              <label htmlFor=\"project_id\" className=\"form-label text-gray-700\">\n                Project ID\n              </label>\n              <Field\n                type=\"number\"\n                name=\"project_id\"\n                className=\"form-control\"\n              />\n              <ErrorMessage name=\"project_id\" component=\"div\" className=\"text-danger small\" />\n            </div>\n            <div className=\"d-flex justify-content-end\">\n              <button\n                type=\"submit\"\n                disabled={isSubmitting}\n                className=\"btn btn-primary\"\n              >\n                {isSubmitting ? 'Submitting...' : editingTask ? 'Update Task' : 'Add Task'}\n              </button>\n            </div>\n          </Form>\n        )}\n      </Formik>\n    </div>\n  );\n}\n\nexport default TaskList;\n"],"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}