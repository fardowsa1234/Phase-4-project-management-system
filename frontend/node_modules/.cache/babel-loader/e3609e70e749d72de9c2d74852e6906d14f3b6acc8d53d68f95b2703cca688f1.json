{"ast":null,"code":"var _jsxFileName = \"/home/jeff/Development/code/se-prep/Phase-4-project-management-system/frontend/src/component/UserForm.jsx\",\n  _s = $RefreshSig$();\n{/* \n import React from 'react';\n import { Formik, Form, Field, ErrorMessage } from 'formik';\n import * as Yup from 'yup';\n const UserForm = ({ addUser }) => {\n  const initialValues = {\n    username: '',\n    email: '',\n    password: '',\n  };\n   const validationSchema = Yup.object().shape({\n    username: Yup.string().required('Username is required'),\n    email: Yup.string().email('Invalid email format').required('Email is required'),\n    password: Yup.string().min(6, 'Password must be at least 6 characters').required('Password is required'),\n  });\n   const handleSubmit = (values, { setSubmitting, resetForm }) => {\n    // Simulate form submission\n    setTimeout(() => {\n      // Assuming addUser is a function that adds the user to the state\n      addUser(values);\n      resetForm();\n      setSubmitting(false);\n    }, 500); // Simulating a delay to mimic async behavior\n  };\n   return (\n    <div className=\"container\">\n      <h2 className=\"text-2xl font-bold mb-4\">Create User</h2>\n      <Formik initialValues={initialValues} validationSchema={validationSchema} onSubmit={handleSubmit}>\n        {({ isSubmitting }) => (\n          <Form className=\"bg-white shadow-sm rounded p-4\">\n            <div className=\"mb-3\">\n              <label htmlFor=\"username\" className=\"form-label\">Username</label>\n              <Field type=\"text\" id=\"username\" name=\"username\" className=\"form-control\" />\n              <ErrorMessage name=\"username\" component=\"div\" className=\"text-danger small\" />\n            </div>\n            <div className=\"mb-3\">\n              <label htmlFor=\"email\" className=\"form-label\">Email</label>\n              <Field type=\"email\" id=\"email\" name=\"email\" className=\"form-control\" />\n              <ErrorMessage name=\"email\" component=\"div\" className=\"text-danger small\" />\n            </div>\n            <div className=\"mb-3\">\n              <label htmlFor=\"password\" className=\"form-label\">Password</label>\n              <Field type=\"password\" id=\"password\" name=\"password\" className=\"form-control\" />\n              <ErrorMessage name=\"password\" component=\"div\" className=\"text-danger small\" />\n            </div>\n            <button type=\"submit\" className=\"btn btn-primary\" disabled={isSubmitting}>\n              {isSubmitting ? 'Submitting...' : 'Submit'}\n            </button>\n          </Form>\n        )}\n      </Formik>\n    </div>\n  );\n };\n export default UserForm;\n */}\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst UserForm = ({\n  match\n}) => {\n  _s();\n  const [formData, setFormData] = useState({\n    username: '',\n    email: '',\n    bio: ''\n  });\n  useEffect(() => {\n    // Fetch user data if editing existing user\n    const fetchUserData = async () => {\n      try {\n        const response = await axios.get(`http://localhost:5555/users/${match.params.userId}`);\n        setFormData(response.data);\n      } catch (error) {\n        console.error('Fetch User Error:', error); // Handle error response\n      }\n    };\n    if (match.params.userId) {\n      fetchUserData();\n    }\n  }, [match.params.userId]);\n  const handleSubmit = async e => {\n    e.preventDefault();\n    try {\n      if (match.params.userId) {\n        await axios.put(`http://localhost:5555/users/${match.params.userId}`, formData);\n      } else {\n        await axios.post('http://localhost:5555/users', formData);\n      }\n      console.log('User saved successfully');\n    } catch (error) {\n      console.error('Save User Error:', error); // Handle error response\n    }\n  };\n  const handleChange = e => {\n    setFormData({\n      ...formData,\n      [e.target.name]: e.target.value\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Create User\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"username\",\n          children: \"Username:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"username\",\n          name: \"username\",\n          value: formData.username,\n          onChange: handleChange,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"email\",\n          children: \"Email:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          id: \"email\",\n          name: \"email\",\n          value: formData.email,\n          onChange: handleChange,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"password\",\n          children: \"Password:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          id: \"password\",\n          name: \"password\",\n          value: formData.password,\n          onChange: handleChange,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"bio\",\n          children: \"Bio:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          id: \"bio\",\n          name: \"bio\",\n          value: formData.bio,\n          onChange: handleChange,\n          rows: 4\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Create User\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 107,\n    columnNumber: 5\n  }, this);\n};\n_s(UserForm, \"KpwrT7s6tYC1oVmEEFF0NOX2EUs=\");\n_c = UserForm;\nexport default UserForm;\nvar _c;\n$RefreshReg$(_c, \"UserForm\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","UserForm","match","_s","formData","setFormData","username","email","bio","fetchUserData","response","get","params","userId","data","error","console","handleSubmit","e","preventDefault","put","post","log","handleChange","target","name","value","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","htmlFor","type","id","onChange","required","password","rows","_c","$RefreshReg$"],"sources":["/home/jeff/Development/code/se-prep/Phase-4-project-management-system/frontend/src/component/UserForm.jsx"],"sourcesContent":["{/* \nimport React from 'react';\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\nimport * as Yup from 'yup';\n\nconst UserForm = ({ addUser }) => {\n  const initialValues = {\n    username: '',\n    email: '',\n    password: '',\n  };\n\n  const validationSchema = Yup.object().shape({\n    username: Yup.string().required('Username is required'),\n    email: Yup.string().email('Invalid email format').required('Email is required'),\n    password: Yup.string().min(6, 'Password must be at least 6 characters').required('Password is required'),\n  });\n\n  const handleSubmit = (values, { setSubmitting, resetForm }) => {\n    // Simulate form submission\n    setTimeout(() => {\n      // Assuming addUser is a function that adds the user to the state\n      addUser(values);\n      resetForm();\n      setSubmitting(false);\n    }, 500); // Simulating a delay to mimic async behavior\n  };\n\n  return (\n    <div className=\"container\">\n      <h2 className=\"text-2xl font-bold mb-4\">Create User</h2>\n      <Formik initialValues={initialValues} validationSchema={validationSchema} onSubmit={handleSubmit}>\n        {({ isSubmitting }) => (\n          <Form className=\"bg-white shadow-sm rounded p-4\">\n            <div className=\"mb-3\">\n              <label htmlFor=\"username\" className=\"form-label\">Username</label>\n              <Field type=\"text\" id=\"username\" name=\"username\" className=\"form-control\" />\n              <ErrorMessage name=\"username\" component=\"div\" className=\"text-danger small\" />\n            </div>\n            <div className=\"mb-3\">\n              <label htmlFor=\"email\" className=\"form-label\">Email</label>\n              <Field type=\"email\" id=\"email\" name=\"email\" className=\"form-control\" />\n              <ErrorMessage name=\"email\" component=\"div\" className=\"text-danger small\" />\n            </div>\n            <div className=\"mb-3\">\n              <label htmlFor=\"password\" className=\"form-label\">Password</label>\n              <Field type=\"password\" id=\"password\" name=\"password\" className=\"form-control\" />\n              <ErrorMessage name=\"password\" component=\"div\" className=\"text-danger small\" />\n            </div>\n            <button type=\"submit\" className=\"btn btn-primary\" disabled={isSubmitting}>\n              {isSubmitting ? 'Submitting...' : 'Submit'}\n            </button>\n          </Form>\n        )}\n      </Formik>\n    </div>\n  );\n};\n\nexport default UserForm;\n*/}\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\n\nconst UserForm = ({ match }) => {\n  const [formData, setFormData] = useState({\n    username: '',\n    email: '',\n    bio: ''\n  });\n\n  useEffect(() => {\n    // Fetch user data if editing existing user\n    const fetchUserData = async () => {\n      try {\n        const response = await axios.get(`http://localhost:5555/users/${match.params.userId}`);\n        setFormData(response.data);\n      } catch (error) {\n        console.error('Fetch User Error:', error); // Handle error response\n      }\n    };\n\n    if (match.params.userId) {\n      fetchUserData();\n    }\n  }, [match.params.userId]);\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    try {\n      if (match.params.userId) {\n        await axios.put(`http://localhost:5555/users/${match.params.userId}`, formData);\n      } else {\n        await axios.post('http://localhost:5555/users', formData);\n      }\n      console.log('User saved successfully');\n    } catch (error) {\n      console.error('Save User Error:', error); // Handle error response\n    }\n  };\n\n  const handleChange = (e) => {\n    setFormData({ ...formData, [e.target.name]: e.target.value });\n  };\n\n  return (\n    <div>\n      <h2>Create User</h2>\n      <form onSubmit={handleSubmit}>\n        <div>\n          <label htmlFor=\"username\">Username:</label>\n          <input\n            type=\"text\"\n            id=\"username\"\n            name=\"username\"\n            value={formData.username}\n            onChange={handleChange}\n            required\n          />\n        </div>\n        <div>\n          <label htmlFor=\"email\">Email:</label>\n          <input\n            type=\"email\"\n            id=\"email\"\n            name=\"email\"\n            value={formData.email}\n            onChange={handleChange}\n            required\n          />\n        </div>\n        <div>\n          <label htmlFor=\"password\">Password:</label>\n          <input\n            type=\"password\"\n            id=\"password\"\n            name=\"password\"\n            value={formData.password}\n            onChange={handleChange}\n            required\n          />\n        </div>\n        <div>\n          <label htmlFor=\"bio\">Bio:</label>\n          <textarea\n            id=\"bio\"\n            name=\"bio\"\n            value={formData.bio}\n            onChange={handleChange}\n            rows={4}\n          />\n        </div>\n        <button type=\"submit\">Create User</button>\n      </form>\n    </div>\n  );\n};\n\nexport default UserForm\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}