{"ast":null,"code":"var _jsxFileName = \"/home/jeff/Development/code/se-prep/Phase-4-project-management-system/frontend/src/component/TaskList.jsx\",\n  _s2 = $RefreshSig$();\n/*\nimport React, { useState, useEffect } from 'react';\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\nimport * as Yup from 'yup';\n\nfunction TaskList() {\n  const [tasks, setTasks] = useState([]);\n  const [editingTask, setEditingTask] = useState(null);\n\n  useEffect(() => {\n    fetchTasks();\n  }, []);\n\n  const fetchTasks = () => {\n    fetch('http://localhost:5555/tasks')\n      .then(response => response.json())\n      .then(data => setTasks(data))\n      .catch(error => console.error('Error fetching tasks:', error));\n  };\n\n  const addTask = (task) => {\n    fetch('http://localhost:5555/tasks', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(task)\n    })\n      .then(response => response.json())\n      .then(() => fetchTasks())\n      .catch(error => console.error('Error adding task:', error));\n  };\n\n  const updateTask = (task) => {\n    fetch(`http://localhost:5555/tasks/${task.id}`, {\n      method: 'PUT',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(task)\n    })\n      .then(response => response.json())\n      .then(() => {\n        fetchTasks();\n        setEditingTask(null);\n      })\n      .catch(error => console.error('Error updating task:', error));\n  };\n\n  const deleteTask = (taskId) => {\n    fetch(`http://localhost:5555/tasks/${taskId}`, {\n      method: 'DELETE',\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    })\n      .then(() => fetchTasks())\n      .catch(error => console.error('Error deleting task:', error));\n  };\n\n  const handleEditClick = (task) => {\n    setEditingTask(task);\n  };\n\n  return (\n    <div>\n      <h2 className=\"text-2xl font-bold text-gray-800 mb-4\">Tasks</h2>\n      <ul className=\"list-group mb-4\">\n        {tasks.map(task => (\n          <li key={task.id} className=\"list-group-item border-gray-200\">\n            <div className=\"px-4 py-4\">\n              <div className=\"d-flex justify-content-between\">\n                <h3 className=\"text-lg font-weight-bold text-gray-900\">{task.name}</h3>\n                <p className=\"mt-1 text-sm text-muted\">Description: {task.description}</p>\n              </div>\n              <p className=\"mt-1 text-sm text-gray-600\">Due Date: {task.due_date}</p>\n              <button className=\"btn btn-secondary btn-sm mr-2\" onClick={() => handleEditClick(task)}>Edit</button>\n              <button className=\"btn btn-danger btn-sm\" onClick={() => deleteTask(task.id)}>Delete</button>\n            </div>\n          </li>\n        ))}\n      </ul>\n      <TaskForm onTaskAdded={addTask} onTaskUpdated={updateTask} editingTask={editingTask} />\n    </div>\n  );\n}\n\nfunction TaskForm({ onTaskAdded, onTaskUpdated, editingTask }) {\n  const initialValues = { name: '', description: '', due_date: '', project_id: '' };\n\n  const validationSchema = Yup.object({\n    name: Yup.string().required('Required'),\n    description: Yup.string().required('Required'),\n    due_date: Yup.string().required('Required'),\n    project_id: Yup.number().required('Required')\n  });\n\n  useEffect(() => {\n    if (editingTask) {\n      Formik.setValues(editingTask);\n    }\n  }, [editingTask]);\n\n  const handleSubmit = (values, { setSubmitting, resetForm }) => {\n    if (editingTask) {\n      onTaskUpdated({ ...values, id: editingTask.id });\n    } else {\n      onTaskAdded(values);\n    }\n    resetForm();\n    setSubmitting(false);\n  };\n\n  return (\n    <Formik\n      initialValues={initialValues}\n      validationSchema={validationSchema}\n      onSubmit={handleSubmit}\n      enableReinitialize\n    >\n      {({ isSubmitting, setValues }) => (\n        <Form className=\"bg-white shadow-sm rounded px-4 pt-4 pb-4 mb-4\">\n          <div className=\"mb-3\">\n            <label htmlFor=\"name\" className=\"form-label text-gray-700\">\n              Name\n            </label>\n            <Field\n              type=\"text\"\n              name=\"name\"\n              className=\"form-control\"\n            />\n            <ErrorMessage name=\"name\" component=\"div\" className=\"text-danger small\" />\n          </div>\n          <div className=\"mb-3\">\n            <label htmlFor=\"description\" className=\"form-label text-gray-700\">\n              Description\n            </label>\n            <Field\n              as=\"textarea\"\n              name=\"description\"\n              className=\"form-control\"\n              rows=\"3\"\n            />\n            <ErrorMessage name=\"description\" component=\"div\" className=\"text-danger small\" />\n          </div>\n          <div className=\"mb-3\">\n            <label htmlFor=\"due_date\" className=\"form-label text-gray-700\">\n              Due Date\n            </label>\n            <Field\n              type=\"date\"\n              name=\"due_date\"\n              className=\"form-control\"\n            />\n            <ErrorMessage name=\"due_date\" component=\"div\" className=\"text-danger small\" />\n          </div>\n          <div className=\"mb-3\">\n            <label htmlFor=\"id\" className=\"form-label text-gray-700\">\n              Project_id\n            </label>\n            <Field\n              type=\"text\"\n              name=\"id\"\n              className=\"form-control\"\n            />\n            <ErrorMessage name=\"project_id\" component=\"div\" className=\"text-danger small\" />\n          </div>\n\n          <div className=\"d-flex justify-content-end\">\n            <button\n              type=\"submit\"\n              disabled={isSubmitting}\n              className=\"btn btn-primary\"\n            >\n              {isSubmitting ? 'Submitting...' : editingTask ? 'Update Task' : 'Add Task'}\n            </button>\n          </div>\n        </Form>\n      )}\n    </Formik>\n  );\n}\n\nexport default TaskList;\n*/\nimport React, { useState, useEffect } from 'react';\nimport { Formik, Form, Field, ErrorMessage, useFormikContext } from 'formik';\nimport * as Yup from 'yup';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction TaskList() {\n  _s2();\n  var _s = $RefreshSig$();\n  const [tasks, setTasks] = useState([]);\n  const [editingTask, setEditingTask] = useState(null);\n  useEffect(() => {\n    fetchTasks();\n  }, []);\n  const fetchTasks = () => {\n    fetch('http://localhost:5555/tasks').then(response => response.json()).then(data => setTasks(data)).catch(error => console.error('Error fetching tasks:', error));\n  };\n  const addTask = task => {\n    fetch('http://localhost:5555/tasks', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(task)\n    }).then(response => response.json()).then(() => fetchTasks()).catch(error => console.error('Error adding task:', error));\n  };\n  const updateTask = task => {\n    fetch(`http://localhost:5555/tasks/${task.id}`, {\n      method: 'PUT',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(task)\n    }).then(response => response.json()).then(() => {\n      fetchTasks();\n      setEditingTask(null);\n    }).catch(error => console.error('Error updating task:', error));\n  };\n  const deleteTask = taskId => {\n    fetch(`http://localhost:5555/tasks/${taskId}`, {\n      method: 'DELETE',\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    }).then(() => fetchTasks()).catch(error => console.error('Error deleting task:', error));\n  };\n  const handleEditClick = task => {\n    setEditingTask(task);\n  };\n  const TaskForm = ({\n    onTaskAdded,\n    onTaskUpdated,\n    editingTask\n  }) => {\n    _s();\n    const initialValues = {\n      name: '',\n      description: '',\n      due_date: '',\n      project_id: ''\n    };\n    const validationSchema = Yup.object({\n      name: Yup.string().required('Required'),\n      description: Yup.string().required('Required'),\n      due_date: Yup.string().required('Required'),\n      project_id: Yup.string().required('Required') // Use string if project_id is a string, otherwise number if it's a number\n    });\n    const {\n      setValues\n    } = useFormikContext();\n    useEffect(() => {\n      if (editingTask) {\n        setValues(editingTask);\n      }\n    }, [editingTask, setValues]);\n    const handleSubmit = (values, {\n      setSubmitting,\n      resetForm\n    }) => {\n      if (editingTask) {\n        onTaskUpdated({\n          ...values,\n          id: editingTask.id\n        });\n      } else {\n        onTaskAdded(values);\n      }\n      resetForm();\n      setSubmitting(false);\n    };\n    return /*#__PURE__*/_jsxDEV(Formik, {\n      initialValues: initialValues,\n      validationSchema: validationSchema,\n      onSubmit: handleSubmit,\n      enableReinitialize: true,\n      children: ({\n        isSubmitting\n      }) => /*#__PURE__*/_jsxDEV(Form, {\n        className: \"bg-white shadow-sm rounded px-4 pt-4 pb-4 mb-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mb-3\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"name\",\n            className: \"form-label text-gray-700\",\n            children: \"Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 287,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Field, {\n            type: \"text\",\n            name: \"name\",\n            className: \"form-control\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 290,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n            name: \"name\",\n            component: \"div\",\n            className: \"text-danger small\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 295,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 286,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mb-3\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"description\",\n            className: \"form-label text-gray-700\",\n            children: \"Description\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 298,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Field, {\n            as: \"textarea\",\n            name: \"description\",\n            className: \"form-control\",\n            rows: \"3\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 301,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n            name: \"description\",\n            component: \"div\",\n            className: \"text-danger small\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 307,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 297,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mb-3\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"due_date\",\n            className: \"form-label text-gray-700\",\n            children: \"Due Date\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 310,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Field, {\n            type: \"date\",\n            name: \"due_date\",\n            className: \"form-control\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 313,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n            name: \"due_date\",\n            component: \"div\",\n            className: \"text-danger small\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 318,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 309,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mb-3\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"project_id\",\n            className: \"form-label text-gray-700\",\n            children: \"Project ID\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 321,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Field, {\n            type: \"text\",\n            name: \"project_id\",\n            className: \"form-control\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 324,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n            name: \"project_id\",\n            component: \"div\",\n            className: \"text-danger small\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 329,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 320,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"d-flex justify-content-end\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            disabled: isSubmitting,\n            className: \"btn btn-primary\",\n            children: isSubmitting ? 'Submitting...' : editingTask ? 'Update Task' : 'Add Task'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 333,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 332,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 285,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 278,\n      columnNumber: 7\n    }, this);\n  };\n  _s(TaskForm, \"eZpeYV+xI2yOsEXKb6CpehuaeeY=\", false, function () {\n    return [useFormikContext];\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"text-2xl font-bold text-gray-800 mb-4\",\n      children: \"Tasks\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 349,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"list-group mb-4\",\n      children: tasks.map(task => /*#__PURE__*/_jsxDEV(\"li\", {\n        className: \"list-group-item border-gray-200\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"px-4 py-4\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"d-flex justify-content-between\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              className: \"text-lg font-weight-bold text-gray-900\",\n              children: task.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 355,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"mt-1 text-sm text-muted\",\n              children: [\"Description: \", task.description]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 356,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 354,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"mt-1 text-sm text-gray-600\",\n            children: [\"Due Date: \", task.due_date]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 358,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn btn-secondary btn-sm mr-2\",\n            onClick: () => handleEditClick(task),\n            children: \"Edit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 359,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn btn-danger btn-sm\",\n            onClick: () => deleteTask(task.id),\n            children: \"Delete\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 360,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 353,\n          columnNumber: 13\n        }, this)\n      }, task.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 352,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 350,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TaskForm, {\n      onTaskAdded: addTask,\n      onTaskUpdated: updateTask,\n      editingTask: editingTask\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 365,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 348,\n    columnNumber: 5\n  }, this);\n}\n_s2(TaskList, \"nwiSLkn6Y0JvLhs83lscW/YeAV0=\");\n_c = TaskList;\nexport default TaskList;\nvar _c;\n$RefreshReg$(_c, \"TaskList\");","map":{"version":3,"names":["React","useState","useEffect","Formik","Form","Field","ErrorMessage","useFormikContext","Yup","jsxDEV","_jsxDEV","TaskList","_s2","_s","$RefreshSig$","tasks","setTasks","editingTask","setEditingTask","fetchTasks","fetch","then","response","json","data","catch","error","console","addTask","task","method","headers","body","JSON","stringify","updateTask","id","deleteTask","taskId","handleEditClick","TaskForm","onTaskAdded","onTaskUpdated","initialValues","name","description","due_date","project_id","validationSchema","object","string","required","setValues","handleSubmit","values","setSubmitting","resetForm","onSubmit","enableReinitialize","children","isSubmitting","className","htmlFor","fileName","_jsxFileName","lineNumber","columnNumber","type","component","as","rows","disabled","map","onClick","_c","$RefreshReg$"],"sources":["/home/jeff/Development/code/se-prep/Phase-4-project-management-system/frontend/src/component/TaskList.jsx"],"sourcesContent":["/*\nimport React, { useState, useEffect } from 'react';\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\nimport * as Yup from 'yup';\n\nfunction TaskList() {\n  const [tasks, setTasks] = useState([]);\n  const [editingTask, setEditingTask] = useState(null);\n\n  useEffect(() => {\n    fetchTasks();\n  }, []);\n\n  const fetchTasks = () => {\n    fetch('http://localhost:5555/tasks')\n      .then(response => response.json())\n      .then(data => setTasks(data))\n      .catch(error => console.error('Error fetching tasks:', error));\n  };\n\n  const addTask = (task) => {\n    fetch('http://localhost:5555/tasks', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(task)\n    })\n      .then(response => response.json())\n      .then(() => fetchTasks())\n      .catch(error => console.error('Error adding task:', error));\n  };\n\n  const updateTask = (task) => {\n    fetch(`http://localhost:5555/tasks/${task.id}`, {\n      method: 'PUT',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(task)\n    })\n      .then(response => response.json())\n      .then(() => {\n        fetchTasks();\n        setEditingTask(null);\n      })\n      .catch(error => console.error('Error updating task:', error));\n  };\n\n  const deleteTask = (taskId) => {\n    fetch(`http://localhost:5555/tasks/${taskId}`, {\n      method: 'DELETE',\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    })\n      .then(() => fetchTasks())\n      .catch(error => console.error('Error deleting task:', error));\n  };\n\n  const handleEditClick = (task) => {\n    setEditingTask(task);\n  };\n\n  return (\n    <div>\n      <h2 className=\"text-2xl font-bold text-gray-800 mb-4\">Tasks</h2>\n      <ul className=\"list-group mb-4\">\n        {tasks.map(task => (\n          <li key={task.id} className=\"list-group-item border-gray-200\">\n            <div className=\"px-4 py-4\">\n              <div className=\"d-flex justify-content-between\">\n                <h3 className=\"text-lg font-weight-bold text-gray-900\">{task.name}</h3>\n                <p className=\"mt-1 text-sm text-muted\">Description: {task.description}</p>\n              </div>\n              <p className=\"mt-1 text-sm text-gray-600\">Due Date: {task.due_date}</p>\n              <button className=\"btn btn-secondary btn-sm mr-2\" onClick={() => handleEditClick(task)}>Edit</button>\n              <button className=\"btn btn-danger btn-sm\" onClick={() => deleteTask(task.id)}>Delete</button>\n            </div>\n          </li>\n        ))}\n      </ul>\n      <TaskForm onTaskAdded={addTask} onTaskUpdated={updateTask} editingTask={editingTask} />\n    </div>\n  );\n}\n\nfunction TaskForm({ onTaskAdded, onTaskUpdated, editingTask }) {\n  const initialValues = { name: '', description: '', due_date: '', project_id: '' };\n\n  const validationSchema = Yup.object({\n    name: Yup.string().required('Required'),\n    description: Yup.string().required('Required'),\n    due_date: Yup.string().required('Required'),\n    project_id: Yup.number().required('Required')\n  });\n\n  useEffect(() => {\n    if (editingTask) {\n      Formik.setValues(editingTask);\n    }\n  }, [editingTask]);\n\n  const handleSubmit = (values, { setSubmitting, resetForm }) => {\n    if (editingTask) {\n      onTaskUpdated({ ...values, id: editingTask.id });\n    } else {\n      onTaskAdded(values);\n    }\n    resetForm();\n    setSubmitting(false);\n  };\n\n  return (\n    <Formik\n      initialValues={initialValues}\n      validationSchema={validationSchema}\n      onSubmit={handleSubmit}\n      enableReinitialize\n    >\n      {({ isSubmitting, setValues }) => (\n        <Form className=\"bg-white shadow-sm rounded px-4 pt-4 pb-4 mb-4\">\n          <div className=\"mb-3\">\n            <label htmlFor=\"name\" className=\"form-label text-gray-700\">\n              Name\n            </label>\n            <Field\n              type=\"text\"\n              name=\"name\"\n              className=\"form-control\"\n            />\n            <ErrorMessage name=\"name\" component=\"div\" className=\"text-danger small\" />\n          </div>\n          <div className=\"mb-3\">\n            <label htmlFor=\"description\" className=\"form-label text-gray-700\">\n              Description\n            </label>\n            <Field\n              as=\"textarea\"\n              name=\"description\"\n              className=\"form-control\"\n              rows=\"3\"\n            />\n            <ErrorMessage name=\"description\" component=\"div\" className=\"text-danger small\" />\n          </div>\n          <div className=\"mb-3\">\n            <label htmlFor=\"due_date\" className=\"form-label text-gray-700\">\n              Due Date\n            </label>\n            <Field\n              type=\"date\"\n              name=\"due_date\"\n              className=\"form-control\"\n            />\n            <ErrorMessage name=\"due_date\" component=\"div\" className=\"text-danger small\" />\n          </div>\n          <div className=\"mb-3\">\n            <label htmlFor=\"id\" className=\"form-label text-gray-700\">\n              Project_id\n            </label>\n            <Field\n              type=\"text\"\n              name=\"id\"\n              className=\"form-control\"\n            />\n            <ErrorMessage name=\"project_id\" component=\"div\" className=\"text-danger small\" />\n          </div>\n\n          <div className=\"d-flex justify-content-end\">\n            <button\n              type=\"submit\"\n              disabled={isSubmitting}\n              className=\"btn btn-primary\"\n            >\n              {isSubmitting ? 'Submitting...' : editingTask ? 'Update Task' : 'Add Task'}\n            </button>\n          </div>\n        </Form>\n      )}\n    </Formik>\n  );\n}\n\nexport default TaskList;\n*/\nimport React, { useState, useEffect } from 'react';\nimport { Formik, Form, Field, ErrorMessage, useFormikContext } from 'formik';\nimport * as Yup from 'yup';\n\nfunction TaskList() {\n  const [tasks, setTasks] = useState([]);\n  const [editingTask, setEditingTask] = useState(null);\n\n  useEffect(() => {\n    fetchTasks();\n  }, []);\n\n  const fetchTasks = () => {\n    fetch('http://localhost:5555/tasks')\n      .then(response => response.json())\n      .then(data => setTasks(data))\n      .catch(error => console.error('Error fetching tasks:', error));\n  };\n\n  const addTask = (task) => {\n    fetch('http://localhost:5555/tasks', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(task)\n    })\n      .then(response => response.json())\n      .then(() => fetchTasks())\n      .catch(error => console.error('Error adding task:', error));\n  };\n\n  const updateTask = (task) => {\n    fetch(`http://localhost:5555/tasks/${task.id}`, {\n      method: 'PUT',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(task)\n    })\n      .then(response => response.json())\n      .then(() => {\n        fetchTasks();\n        setEditingTask(null);\n      })\n      .catch(error => console.error('Error updating task:', error));\n  };\n\n  const deleteTask = (taskId) => {\n    fetch(`http://localhost:5555/tasks/${taskId}`, {\n      method: 'DELETE',\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    })\n      .then(() => fetchTasks())\n      .catch(error => console.error('Error deleting task:', error));\n  };\n\n  const handleEditClick = (task) => {\n    setEditingTask(task);\n  };\n\n  const TaskForm = ({ onTaskAdded, onTaskUpdated, editingTask }) => {\n    const initialValues = { name: '', description: '', due_date: '', project_id: '' };\n\n    const validationSchema = Yup.object({\n      name: Yup.string().required('Required'),\n      description: Yup.string().required('Required'),\n      due_date: Yup.string().required('Required'),\n      project_id: Yup.string().required('Required')  // Use string if project_id is a string, otherwise number if it's a number\n    });\n\n    const { setValues } = useFormikContext();\n\n    useEffect(() => {\n      if (editingTask) {\n        setValues(editingTask);\n      }\n    }, [editingTask, setValues]);\n\n    const handleSubmit = (values, { setSubmitting, resetForm }) => {\n      if (editingTask) {\n        onTaskUpdated({ ...values, id: editingTask.id });\n      } else {\n        onTaskAdded(values);\n      }\n      resetForm();\n      setSubmitting(false);\n    };\n\n    return (\n      <Formik\n        initialValues={initialValues}\n        validationSchema={validationSchema}\n        onSubmit={handleSubmit}\n        enableReinitialize\n      >\n        {({ isSubmitting }) => (\n          <Form className=\"bg-white shadow-sm rounded px-4 pt-4 pb-4 mb-4\">\n            <div className=\"mb-3\">\n              <label htmlFor=\"name\" className=\"form-label text-gray-700\">\n                Name\n              </label>\n              <Field\n                type=\"text\"\n                name=\"name\"\n                className=\"form-control\"\n              />\n              <ErrorMessage name=\"name\" component=\"div\" className=\"text-danger small\" />\n            </div>\n            <div className=\"mb-3\">\n              <label htmlFor=\"description\" className=\"form-label text-gray-700\">\n                Description\n              </label>\n              <Field\n                as=\"textarea\"\n                name=\"description\"\n                className=\"form-control\"\n                rows=\"3\"\n              />\n              <ErrorMessage name=\"description\" component=\"div\" className=\"text-danger small\" />\n            </div>\n            <div className=\"mb-3\">\n              <label htmlFor=\"due_date\" className=\"form-label text-gray-700\">\n                Due Date\n              </label>\n              <Field\n                type=\"date\"\n                name=\"due_date\"\n                className=\"form-control\"\n              />\n              <ErrorMessage name=\"due_date\" component=\"div\" className=\"text-danger small\" />\n            </div>\n            <div className=\"mb-3\">\n              <label htmlFor=\"project_id\" className=\"form-label text-gray-700\">\n                Project ID\n              </label>\n              <Field\n                type=\"text\"\n                name=\"project_id\"\n                className=\"form-control\"\n              />\n              <ErrorMessage name=\"project_id\" component=\"div\" className=\"text-danger small\" />\n            </div>\n\n            <div className=\"d-flex justify-content-end\">\n              <button\n                type=\"submit\"\n                disabled={isSubmitting}\n                className=\"btn btn-primary\"\n              >\n                {isSubmitting ? 'Submitting...' : editingTask ? 'Update Task' : 'Add Task'}\n              </button>\n            </div>\n          </Form>\n        )}\n      </Formik>\n    );\n  };\n\n  return (\n    <div>\n      <h2 className=\"text-2xl font-bold text-gray-800 mb-4\">Tasks</h2>\n      <ul className=\"list-group mb-4\">\n        {tasks.map(task => (\n          <li key={task.id} className=\"list-group-item border-gray-200\">\n            <div className=\"px-4 py-4\">\n              <div className=\"d-flex justify-content-between\">\n                <h3 className=\"text-lg font-weight-bold text-gray-900\">{task.name}</h3>\n                <p className=\"mt-1 text-sm text-muted\">Description: {task.description}</p>\n              </div>\n              <p className=\"mt-1 text-sm text-gray-600\">Due Date: {task.due_date}</p>\n              <button className=\"btn btn-secondary btn-sm mr-2\" onClick={() => handleEditClick(task)}>Edit</button>\n              <button className=\"btn btn-danger btn-sm\" onClick={() => deleteTask(task.id)}>Delete</button>\n            </div>\n          </li>\n        ))}\n      </ul>\n      <TaskForm onTaskAdded={addTask} onTaskUpdated={updateTask} editingTask={editingTask} />\n    </div>\n  );\n}\n\nexport default TaskList;\n"],"mappingslD,SAASC,MAAM,EAAEC,IAAI,EAAEC,KAAK,EAAEC,YAAY,EAAEC,gBAAgB,QAAQ,QAAQ;AAC5E,OAAO,KAAKC,GAAG,MAAM,KAAK;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE3B,SAASC,QAAQA,CAAA,EAAG;EAAAC,GAAA;EAAA,IAAAC,EAAA,GAAAC,YAAA;EAClB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGf,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACgB,WAAW,EAAEC,cAAc,CAAC,GAAGjB,QAAQ,CAAC,IAAI,CAAC;EAEpDC,SAAS,CAAC,MAAM;IACdiB,UAAU,CAAC,CAAC;EACd,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMA,UAAU,GAAGA,CAAA,KAAM;IACvBC,KAAK,CAAC,6BAA6B,CAAC,CACjCC,IAAI,CAACC,QAAQ,IAAIA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CACjCF,IAAI,CAACG,IAAI,IAAIR,QAAQ,CAACQ,IAAI,CAAC,CAAC,CAC5BC,KAAK,CAACC,KAAK,IAAIC,OAAO,CAACD,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC,CAAC;EAClE,CAAC;EAED,MAAME,OAAO,GAAIC,IAAI,IAAK;IACxBT,KAAK,CAAC,6BAA6B,EAAE;MACnCU,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QACP,cAAc,EAAE;MAClB,CAAC;MACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACL,IAAI;IAC3B,CAAC,CAAC,CACCR,IAAI,CAACC,QAAQ,IAAIA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CACjCF,IAAI,CAAC,MAAMF,UAAU,CAAC,CAAC,CAAC,CACxBM,KAAK,CAACC,KAAK,IAAIC,OAAO,CAACD,KAAK,CAAC,oBAAoB,EAAEA,KAAK,CAAC,CAAC;EAC/D,CAAC;EAED,MAAMS,UAAU,GAAIN,IAAI,IAAK;IAC3BT,KAAK,CAAC,+BAA+BS,IAAI,CAACO,EAAE,EAAE,EAAE;MAC9CN,MAAM,EAAE,KAAK;MACbC,OAAO,EAAE;QACP,cAAc,EAAE;MAClB,CAAC;MACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACL,IAAI;IAC3B,CAAC,CAAC,CACCR,IAAI,CAACC,QAAQ,IAAIA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CACjCF,IAAI,CAAC,MAAM;MACVF,UAAU,CAAC,CAAC;MACZD,cAAc,CAAC,IAAI,CAAC;IACtB,CAAC,CAAC,CACDO,KAAK,CAACC,KAAK,IAAIC,OAAO,CAACD,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC,CAAC;EACjE,CAAC;EAED,MAAMW,UAAU,GAAIC,MAAM,IAAK;IAC7BlB,KAAK,CAAC,+BAA+BkB,MAAM,EAAE,EAAE;MAC7CR,MAAM,EAAE,QAAQ;MAChBC,OAAO,EAAE;QACP,cAAc,EAAE;MAClB;IACF,CAAC,CAAC,CACCV,IAAI,CAAC,MAAMF,UAAU,CAAC,CAAC,CAAC,CACxBM,KAAK,CAACC,KAAK,IAAIC,OAAO,CAACD,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC,CAAC;EACjE,CAAC;EAED,MAAMa,eAAe,GAAIV,IAAI,IAAK;IAChCX,cAAc,CAACW,IAAI,CAAC;EACtB,CAAC;EAED,MAAMW,QAAQ,GAAGA,CAAC;IAAEC,WAAW;IAAEC,aAAa;IAAEzB;EAAY,CAAC,KAAK;IAAAJ,EAAA;IAChE,MAAM8B,aAAa,GAAG;MAAEC,IAAI,EAAE,EAAE;MAAEC,WAAW,EAAE,EAAE;MAAEC,QAAQ,EAAE,EAAE;MAAEC,UAAU,EAAE;IAAG,CAAC;IAEjF,MAAMC,gBAAgB,GAAGxC,GAAG,CAACyC,MAAM,CAAC;MAClCL,IAAI,EAAEpC,GAAG,CAAC0C,MAAM,CAAC,CAAC,CAACC,QAAQ,CAAC,UAAU,CAAC;MACvCN,WAAW,EAAErC,GAAG,CAAC0C,MAAM,CAAC,CAAC,CAACC,QAAQ,CAAC,UAAU,CAAC;MAC9CL,QAAQ,EAAEtC,GAAG,CAAC0C,MAAM,CAAC,CAAC,CAACC,QAAQ,CAAC,UAAU,CAAC;MAC3CJ,UAAU,EAAEvC,GAAG,CAAC0C,MAAM,CAAC,CAAC,CAACC,QAAQ,CAAC,UAAU,CAAC,CAAE;IACjD,CAAC,CAAC;IAEF,MAAM;MAAEC;IAAU,CAAC,GAAG7C,gBAAgB,CAAC,CAAC;IAExCL,SAAS,CAAC,MAAM;MACd,IAAIe,WAAW,EAAE;QACfmC,SAAS,CAACnC,WAAW,CAAC;MACxB;IACF,CAAC,EAAE,CAACA,WAAW,EAAEmC,SAAS,CAAC,CAAC;IAE5B,MAAMC,YAAY,GAAGA,CAACC,MAAM,EAAE;MAAEC,aAAa;MAAEC;IAAU,CAAC,KAAK;MAC7D,IAAIvC,WAAW,EAAE;QACfyB,aAAa,CAAC;UAAE,GAAGY,MAAM;UAAElB,EAAE,EAAEnB,WAAW,CAACmB;QAAG,CAAC,CAAC;MAClD,CAAC,MAAM;QACLK,WAAW,CAACa,MAAM,CAAC;MACrB;MACAE,SAAS,CAAC,CAAC;MACXD,aAAa,CAAC,KAAK,CAAC;IACtB,CAAC;IAED,oBACE7C,OAAA,CAACP,MAAM;MACLwC,aAAa,EAAEA,aAAc;MAC7BK,gBAAgB,EAAEA,gBAAiB;MACnCS,QAAQ,EAAEJ,YAAa;MACvBK,kBAAkB;MAAAC,QAAA,EAEjBA,CAAC;QAAEC;MAAa,CAAC,kBAChBlD,OAAA,CAACN,IAAI;QAACyD,SAAS,EAAC,gDAAgD;QAAAF,QAAA,gBAC9DjD,OAAA;UAAKmD,SAAS,EAAC,MAAM;UAAAF,QAAA,gBACnBjD,OAAA;YAAOoD,OAAO,EAAC,MAAM;YAACD,SAAS,EAAC,0BAA0B;YAAAF,QAAA,EAAC;UAE3D;YAAAI,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAO,CAAC,eACRxD,OAAA,CAACL,KAAK;YACJ8D,IAAI,EAAC,MAAM;YACXvB,IAAI,EAAC,MAAM;YACXiB,SAAS,EAAC;UAAc;YAAAE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACzB,CAAC,eACFxD,OAAA,CAACJ,YAAY;YAACsC,IAAI,EAAC,MAAM;YAACwB,SAAS,EAAC,KAAK;YAACP,SAAS,EAAC;UAAmB;YAAAE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACvE,CAAC,eACNxD,OAAA;UAAKmD,SAAS,EAAC,MAAM;UAAAF,QAAA,gBACnBjD,OAAA;YAAOoD,OAAO,EAAC,aAAa;YAACD,SAAS,EAAC,0BAA0B;YAAAF,QAAA,EAAC;UAElE;YAAAI,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAO,CAAC,eACRxD,OAAA,CAACL,KAAK;YACJgE,EAAE,EAAC,UAAU;YACbzB,IAAI,EAAC,aAAa;YAClBiB,SAAS,EAAC,cAAc;YACxBS,IAAI,EAAC;UAAG;YAAAP,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACT,CAAC,eACFxD,OAAA,CAACJ,YAAY;YAACsC,IAAI,EAAC,aAAa;YAACwB,SAAS,EAAC,KAAK;YAACP,SAAS,EAAC;UAAmB;YAAAE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC9E,CAAC,eACNxD,OAAA;UAAKmD,SAAS,EAAC,MAAM;UAAAF,QAAA,gBACnBjD,OAAA;YAAOoD,OAAO,EAAC,UAAU;YAACD,SAAS,EAAC,0BAA0B;YAAAF,QAAA,EAAC;UAE/D;YAAAI,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAO,CAAC,eACRxD,OAAA,CAACL,KAAK;YACJ8D,IAAI,EAAC,MAAM;YACXvB,IAAI,EAAC,UAAU;YACfiB,SAAS,EAAC;UAAc;YAAAE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACzB,CAAC,eACFxD,OAAA,CAACJ,YAAY;YAACsC,IAAI,EAAC,UAAU;YAACwB,SAAS,EAAC,KAAK;YAACP,SAAS,EAAC;UAAmB;YAAAE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC3E,CAAC,eACNxD,OAAA;UAAKmD,SAAS,EAAC,MAAM;UAAAF,QAAA,gBACnBjD,OAAA;YAAOoD,OAAO,EAAC,YAAY;YAACD,SAAS,EAAC,0BAA0B;YAAAF,QAAA,EAAC;UAEjE;YAAAI,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAO,CAAC,eACRxD,OAAA,CAACL,KAAK;YACJ8D,IAAI,EAAC,MAAM;YACXvB,IAAI,EAAC,YAAY;YACjBiB,SAAS,EAAC;UAAc;YAAAE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACzB,CAAC,eACFxD,OAAA,CAACJ,YAAY;YAACsC,IAAI,EAAC,YAAY;YAACwB,SAAS,EAAC,KAAK;YAACP,SAAS,EAAC;UAAmB;YAAAE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC7E,CAAC,eAENxD,OAAA;UAAKmD,SAAS,EAAC,4BAA4B;UAAAF,QAAA,eACzCjD,OAAA;YACEyD,IAAI,EAAC,QAAQ;YACbI,QAAQ,EAAEX,YAAa;YACvBC,SAAS,EAAC,iBAAiB;YAAAF,QAAA,EAE1BC,YAAY,GAAG,eAAe,GAAG3C,WAAW,GAAG,aAAa,GAAG;UAAU;YAAA8C,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACpE;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACN,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACF;IACP;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACK,CAAC;EAEb,CAAC;EAACrD,EAAA,CAhGI2B,QAAQ;IAAA,QAUUjC,gBAAgB;EAAA;EAwFxC,oBACEG,OAAA;IAAAiD,QAAA,gBACEjD,OAAA;MAAImD,SAAS,EAAC,uCAAuC;MAAAF,QAAA,EAAC;IAAK;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAChExD,OAAA;MAAImD,SAAS,EAAC,iBAAiB;MAAAF,QAAA,EAC5B5C,KAAK,CAACyD,GAAG,CAAC3C,IAAI,iBACbnB,OAAA;QAAkBmD,SAAS,EAAC,iCAAiC;QAAAF,QAAA,eAC3DjD,OAAA;UAAKmD,SAAS,EAAC,WAAW;UAAAF,QAAA,gBACxBjD,OAAA;YAAKmD,SAAS,EAAC,gCAAgC;YAAAF,QAAA,gBAC7CjD,OAAA;cAAImD,SAAS,EAAC,wCAAwC;cAAAF,QAAA,EAAE9B,IAAI,CAACe;YAAI;cAAAmB,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAK,CAAC,eACvExD,OAAA;cAAGmD,SAAS,EAAC,yBAAyB;cAAAF,QAAA,GAAC,eAAa,EAAC9B,IAAI,CAACgB,WAAW;YAAA;cAAAkB,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACvE,CAAC,eACNxD,OAAA;YAAGmD,SAAS,EAAC,4BAA4B;YAAAF,QAAA,GAAC,YAAU,EAAC9B,IAAI,CAACiB,QAAQ;UAAA;YAAAiB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eACvExD,OAAA;YAAQmD,SAAS,EAAC,+BAA+B;YAACY,OAAO,EAAEA,CAAA,KAAMlC,eAAe,CAACV,IAAI,CAAE;YAAA8B,QAAA,EAAC;UAAI;YAAAI,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC,eACrGxD,OAAA;YAAQmD,SAAS,EAAC,uBAAuB;YAACY,OAAO,EAAEA,CAAA,KAAMpC,UAAU,CAACR,IAAI,CAACO,EAAE,CAAE;YAAAuB,QAAA,EAAC;UAAM;YAAAI,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC1F;MAAC,GATCrC,IAAI,CAACO,EAAE;QAAA2B,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAUZ,CACL;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CAAC,eACLxD,OAAA,CAAC8B,QAAQ;MAACC,WAAW,EAAEb,OAAQ;MAACc,aAAa,EAAEP,UAAW;MAAClB,WAAW,EAAEA;IAAY;MAAA8C,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACpF,CAAC;AAEV;AAACtD,GAAA,CAlLQD,QAAQ;AAAA+D,EAAA,GAAR/D,QAAQ;AAoLjB,eAAeA,QAAQ;AAAC,IAAA+D,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}